{"version":3,"sources":["validate/validate.js","components/renderField.jsx","components/Contacts.jsx","components/Address.jsx","components/Categories.jsx","components/Success.jsx","store/userReducer.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["validate","values","errors","password","password2","email","test","country","city","address","category1","category2","renderField","input","label","type","meta","touched","error","placeholder","className","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","props","handleSubmit","pristine","submitting","onSubmit","Field","name","component","disabled","handlePreviousStep","onClick","colors","renderColorSelector","value","map","val","Success","reset","user","useSelector","state","JSON","stringify","to","SET_USER_DATA","initialState","stepsNames","App","history","useHistory","dispatch","useDispatch","useState","currentStep","setCurrentStep","useEffect","indexOf","location","pathname","slice","prev","push","handleNextStep","console","log","stepName","index","cx","toUpperCase","exact","path","payload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","formReducer","action","store","createStore","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.20f6a632.chunk.js","sourcesContent":["const validate = values => {\r\n  const errors = {}\r\n  if (!values.password) {\r\n    errors.password = 'Required'\r\n  }\r\n  if (!values.password2) {\r\n    errors.password2 = 'Required'\r\n  }\r\n  if (values.password !== values.password2) {\r\n    errors.password2 = 'Password are not equal'\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (!values.country) {\r\n    errors.country = 'Required'\r\n  }\r\n  if (!values.city) {\r\n    errors.city = 'Required'\r\n  }\r\n  if (!values.address) {\r\n    errors.address = 'Required'\r\n  }\r\n  if (!values.category1) {\r\n    errors.category1 = 'Required'\r\n  }\r\n  if (!values.category2) {\r\n    errors.category2 = 'Required'\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default validate","import React from 'react'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} placeholder={label} type={type} />\r\n      {touched && error && <span className=\"error\">{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default renderField","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from '../validate/validate'\r\nimport renderField from './renderField'\r\n\r\nlet Contacts = props => {\r\n  const { handleSubmit, pristine, submitting  } = props\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={renderField}\r\n          label=\"Email\"\r\n        />\r\n      </div>\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"password\"\r\n          type=\"password\"\r\n          component={renderField}\r\n          label=\"Password\"\r\n        />\r\n      </div>\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"password2\"\r\n          type=\"password\"\r\n          component={renderField}\r\n          label=\"Password confirm\"\r\n        />\r\n      </div>\r\n      <button className=\"form__btn\" type=\"submit\" disabled={pristine || submitting}>NEXT</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contact', // <------ same form name\r\n  destroyOnUnmount: false, // <------ preserve form data\r\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\r\n  validate\r\n})(Contacts)","import React from 'react'\r\nimport validate from '../validate/validate'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport renderField from './renderField'\r\n\r\n\r\nlet Address = props => {\r\n  const { handleSubmit, handlePreviousStep, pristine, submitting} = props\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"country\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Country\"\r\n        />\r\n      </div>\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"city\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"City\"\r\n        />\r\n      </div>\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"address\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Address\"\r\n        />\r\n      </div>\r\n\r\n      <button className=\"form__btn\" type=\"button\" onClick={handlePreviousStep}>BACK</button>\r\n      <button className=\"form__btn\" type=\"submit\" disabled={pristine || submitting}>NEXT</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contact', // <------ same form name\r\n  destroyOnUnmount: false, // <------ preserve form data\r\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\r\n  validate\r\n})(Address)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from '../validate/validate'\r\nimport renderField from './renderField'\r\nconst colors = ['Arts', 'JS', 'PHP', 'Java', 'TS']\r\n\r\n\r\nconst renderColorSelector = ({ input, meta: { touched, error } }) => (\r\n  <div>\r\n    <select {...input}>\r\n      <option value=\"\">Select a category...</option>\r\n      {colors.map(val => (\r\n        <option value={val} key={val}>\r\n          {val}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    {touched && error && <span className=\"error\">{error}</span>}\r\n  </div>\r\n)\r\n\r\n\r\nconst Categories = props => {\r\n  const { handleSubmit, handlePreviousStep, pristine, submitting } = props\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <div className=\"form__control\">\r\n        <label>Favorite Color</label>\r\n        <Field name=\"category1\" component={renderColorSelector} />\r\n      </div>\r\n\r\n      <div className=\"form__control\">\r\n        <Field\r\n          name=\"category2\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Category 2\"\r\n        />\r\n      </div>\r\n\r\n      <button className=\"form__btn\" type=\"button\" onClick={handlePreviousStep}>BACK</button>\r\n      <button className=\"form__btn\" type=\"submit\" disabled={pristine || submitting}>NEXT</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contact', // <------ same form name\r\n  destroyOnUnmount: true, // <------ preserve form data\r\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\r\n  validate\r\n})(Categories)","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Success = ({reset}) => {\r\n  const {user} = useSelector(state => state.user)\r\n\r\n  return (\r\n    <div className=\"success\">\r\n        <h1>SUCCESS!</h1>\r\n        {/* {user && <div>\r\n          <div>{user.firstName}</div>\r\n          <div>{user.lastName}</div>\r\n          <div>{user.email}</div>\r\n        </div>} */}\r\n        {user &&  <pre>{JSON.stringify(user, null, 2)}</pre>}\r\n        <Link to=\"/contacts\" onClick={reset}>Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Success","const SET_USER_DATA = \"SET_USER_DATA\"\r\n\r\nconst initialState = {\r\n  user: {},\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n\r\n      default:\r\n        return state\r\n  }\r\n}\r\n\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    payload: user\r\n  }\r\n}\r\n","import './App.css';\nimport { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Redirect, Route, useHistory,  } from 'react-router-dom'\nimport Contacts from './components/Contacts';\nimport Address from './components/Address';\nimport Categories from './components/Categories';\nimport cx from \"classnames\";\nimport Success from './components/Success';\nimport { setUser } from './store/userReducer';\n\nconst stepsNames = [\"contacts\", \"address\", \"categories\", \"success\"];\n\nfunction App() {\n\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const [currentStep, setCurrentStep] = useState(1)\n\n  useEffect(() => {\n    setCurrentStep(stepsNames.indexOf(`${history.location.pathname.slice(1)}`) + 1 || 1)\n  }, [history.location.pathname])\n\n\n  const handlePreviousStep = () => {\n    setCurrentStep(prev => prev - 1);\n     history.push(`/${stepsNames[currentStep - 2]}`)\n  };\n\n  const handleNextStep = () => {\n    setCurrentStep(currentStep + 1);\n    history.push(`/${stepsNames[currentStep]}`)\n\n  };\n\n\n  console.log(history.location.pathname.slice(1))\n\n  const submitF = values => {\n    dispatch(setUser(values))\n    handleNextStep()\n  }\n  const reset = () => {\n    setCurrentStep(1)\n    history.push(`/${stepsNames[0]}`)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"steps\">\n        {stepsNames.map((stepName, index) => (\n          <div\n            key={index}\n            className={cx(\"step\", {\n              // \"is-active\": stepName === history.location.pathname.slice(1),\n              \"is-active\": currentStep === index + 1,\n              \"is-completed\": currentStep > index + 1\n            })}\n          >\n            <div className=\"step__marker\">{index + 1}</div>\n            <div className=\"step__title mt-1\">{stepName.toUpperCase()}</div>\n          </div>\n        ))}\n      </div>\n\n          <Route exact path={[\"/\", \"/contacts\"]}>\n            <Contacts onSubmit={handleNextStep}  />\n          </Route>\n\n           <Route exact path=\"/address\" >\n            <Address  onSubmit={handleNextStep} handlePreviousStep={handlePreviousStep} />\n          </Route>\n\n           <Route exact path=\"/categories\" >\n            <Categories onSubmit={submitF} handlePreviousStep={handlePreviousStep} />\n          </Route>\n\n           <Route exact path=\"/success\" >\n            <Success reset={reset} />\n          </Route>\n\n          <Route exact path=\"/\" >\n            <Redirect to=\"/contacts\" />\n          </Route>\n\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { userReducer } from './userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  // ...your other reducers here\r\n  // you have to pass formReducer under 'form' key,\r\n  // for custom keys look up the docs for 'getFormState'\r\n  form: formReducer,\r\n  user: userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { store } from './store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <Router basename={process.env.PUBLIC_URL} >\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}